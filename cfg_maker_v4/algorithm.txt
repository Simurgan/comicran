[ ] 1. The program should read root_dir from input config file.
[ ] 2. The program should read root_process from input config file.
[ ] 3. The program should read the directories list from the input config file and should add the directory paths read to the directories array.
    [ ] I. The program should consider hierarchy in the paths and add the path of the every nested parent directory to the list.
    [ ] II. The program shouldn't add any duplicates to the array.
[ ] 4. The program should check if there is an executables list in the input file and add items in it to the executables array if the list is not empty.
    [ ] I. The program shouldn't add any duplicates to the array.
[ ] 5. The program should add the root_process read from the input config file and add it to the end of the executables array if it is not already in there.
[ ] 6. The program should read the file_copies list from the input config file and add items in it to the file_copies array if the list is not empty.
    [ ] I. The program should add necessary parent directories that should created to be able to copy the file (specified in the path of the file to be copied) to the directories array.
    [ ] II. The program shouldn't add any duplicates to the array.
[ ] 7. The program should add all of the dependencies of each executable in the executable array to the file_copies array.
    [ ] I. The program should add necessary parent directories that should created to be able to copy the file (specified in the path of the dependancy) to the directories array.
    [ ] II. The program shouldn't add any duplicates to the array.
[ ] 8. The program should iterate over directories array and resolve the real paths of the items:
    [ ] I. If the real path of the item is not the same as the item itself:
        [ ] a. The item should be added to the symlinks array (item itself as sym and resolved path as dst)
        [ ] b. The program shouldn't add any duplicates to the symlinks array.
        [ ] c. The program should replace the item in the directories array as its resolved path.
        [ ] d. The program should iterate over the rest of the array and checks if the rest of the items in the array starts with the item itself:
            [ ] 1. If yes, that part should be replaced as the resolved path. 
[ ] 9. The program should iterate over file_copies array and resolve the real paths of the items:
    [ ] I. If the real path of the item is not the same as the item itself:
        [ ] a. The item should be added to the symlinks array (item itself as sym and resolved path as dst)
        [ ] b. The program shouldn't add any duplicates to the symlinks array.
        [ ] c. The program should replace the item in the file_copies array as its resolved path.
        [ ] d. The program should iterate over the rest of the array and checks if the rest of the items in the array starts with the item itself:
            [ ] 1. If yes, that part should be replaced as the resolved path. 
[ ] 10. The program should read the symlinks list from the input config file and add items in it to the symlinks array if the list is not empty.
    [ ] I. The program shouldn't add any duplicates to the array.
[ ] 11. The program should write root_dir to the output config file.
[ ] 12. The program should write root_process to the output config file.
[ ] 13. The program should write directories array to the output config file.
[ ] 14. The program should write file_copies array to the output config file.
[ ] 15. The program should write symlinks array to the output config file.
